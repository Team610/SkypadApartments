#Import OpenCV
import cv2
#Import Numpy
import numpy as np

camera_feed = cv2.VideoCapture(1)

while(1):

    _,frame = camera_feed.read()
    #Convert the current frame to HSV
    hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)

    #Define the threshold for finding a blue object with hsv
    lower_blue = np.array([50,80,80])
    upper_blue = np.array([90,255,255])

    #Create a binary image, where anything blue appears white and everything else is black
    mask = cv2.inRange(hsv, lower_blue, upper_blue)

    #Get rid of background noise using erosion and fill in the holes using dilation and erode the final image on last time
    element = cv2.getStructuringElement(cv2.MORPH_RECT,(3,3))
    mask = cv2.erode(mask,element, iterations=2)
    mask = cv2.dilate(mask,element,iterations=2)
    mask = cv2.erode(mask,element)
    
    #Create Contours for all blue objects
    contours, hierarchy = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    maximumArea = 0
    bestContour = None
    for contour in contours:
        currentArea = cv2.contourArea(contour)
        if currentArea > maximumArea:
            bestContour = contour
            maximumArea = currentArea
     #Create a bounding box around the biggest blue object
    if bestContour is not None:
        x,y,w,h = cv2.boundingRect(bestContour)
        cv2.rectangle(frame, (x,y),(x+w,y+h), (0,0,255), 2)
        rect = cv2.minAreaRect(bestContour)
        box = cv2.cv.BoxPoints(rect)
        box = np.int0(box)
        cv2.drawContours(frame,[box],0,(130,130,255),2)
        #Calculate centroid of bounding box and add it to Frame
        center_x = w/2
        center_y = h/2
        x_coordinate = x + center_x
        y_coordinate = y + center_y
        x_y = x_coordinate, y_coordinate
        cv2.circle(frame, (x_coordinate,y_coordinate),10,0,-1)
        print(x_y)
        if y_coordinate < 156:
            print("Move Down")
        if y_coordinate > 312:
            print("move up")
        if y_coordinate in range(156,312):
            if x_coordinate < 210:
                print("Move Right")
            if x_coordinate > 420:
                print("Move Left")
            if x_coordinate in range(210,410):
                print("Centered")
                
    #Show the original camera feed with a bounding box overlayed 
    cv2.imshow('Blue object tracker',frame)
    #Show the contours in a seperate window
    cv2.imshow('Black and White Threshod',mask)
    #Use this command to prevent freezes in the feed
    k = cv2.waitKey(5)
    #If escape is pressed close all windows
    if k == 27:
        break

cv2.destroyAllWindows()    
